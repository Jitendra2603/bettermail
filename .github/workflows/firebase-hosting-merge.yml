name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LLAMA_PARSE_API_KEY: ${{ secrets.LLAMA_PARSE_API_KEY }}
      FIREBASE_ADMIN_PROJECT_ID: ${{ secrets.FIREBASE_ADMIN_PROJECT_ID }}
      FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
      FIREBASE_ADMIN_PRIVATE_KEY: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXTAUTH_URL: https://messages.lu.vg
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_SITE_URL: https://messages.lu.vg
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Install Functions dependencies
        run: cd functions && npm install --legacy-peer-deps
        
      - name: Enable Firebase Web Frameworks
        run: npx firebase-tools experiments:enable webframeworks
        
      - name: Build
        run: npm run build
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BETTERMAIL_CB010 }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Grant Extensions Permissions
        run: |
          gcloud projects add-iam-policy-binding bettermail-cb010 \
            --member=serviceAccount:github-actions@bettermail-cb010.iam.gserviceaccount.com \
            --role=roles/firebaseextensions.viewer
        continue-on-error: true
        
      - name: Deploy to Firebase (Standard Method)
        id: standard_deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BETTERMAIL_CB010 }}
          channelId: live
          projectId: bettermail-cb010
        continue-on-error: true
        
      - name: Deploy to Firebase (Fallback Method)
        if: steps.standard_deploy.outcome == 'failure'
        run: |
          echo "Standard deployment failed, using fallback method..."
          npx firebase-tools deploy --only hosting --project bettermail-cb010 --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
        env:
          FIREBASE_DEPLOY_AGENT: github